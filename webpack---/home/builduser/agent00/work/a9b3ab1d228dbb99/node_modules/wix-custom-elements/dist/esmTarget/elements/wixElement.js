function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
}

function _wrapNativeSuper(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;
    _wrapNativeSuper = function _wrapNativeSuper(Class) {
        if (Class === null || !_isNativeFunction(Class)) return Class;
        if (typeof Class !== "function") {
            throw new TypeError("Super expression must either be null or a function");
        }
        if (typeof _cache !== "undefined") {
            if (_cache.has(Class)) return _cache.get(Class);
            _cache.set(Class, Wrapper);
        }

        function Wrapper() {
            return _construct(Class, arguments, _getPrototypeOf(this).constructor);
        }
        Wrapper.prototype = Object.create(Class.prototype, {
            constructor: {
                value: Wrapper,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
        return _setPrototypeOf(Wrapper, Class);
    };
    return _wrapNativeSuper(Class);
}

function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));
        return true;
    } catch (e) {
        return false;
    }
}

function _construct(Parent, args, Class) {
    if (isNativeReflectConstruct()) {
        _construct = Reflect.construct;
    } else {
        _construct = function _construct(Parent, args, Class) {
            var a = [null];
            a.push.apply(a, args);
            var Constructor = Function.bind.apply(Parent, a);
            var instance = new Constructor();
            if (Class) _setPrototypeOf(instance, Class.prototype);
            return instance;
        };
    }
    return _construct.apply(null, arguments);
}

function _isNativeFunction(fn) {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o, p);
}

function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
}

function wixElementWrapper(services) {
    var WixElement =
        /*#__PURE__*/
        function(_HTMLElement) {
            _inheritsLoose(WixElement, _HTMLElement);

            function WixElement() {
                // eslint-disable-line no-useless-constructor
                return _HTMLElement.call(this) || this;
            }

            var _proto = WixElement.prototype;

            _proto.reLayout = function reLayout() { //should be implemented inside child element
            };

            _proto.connectedCallback = function connectedCallback() {
                this.observeResize();
                this.reLayout();
            };

            _proto.disconnectedCallback = function disconnectedCallback() {
                this.unobserveResize();
                this.unobserveChildren();
            };

            _proto.observeResize = function observeResize() {
                services.resizeService.observe(this);
            };

            _proto.unobserveResize = function unobserveResize() {
                services.resizeService.unobserve(this);
            }
            /**01
             * Observe DOM mutations to wait for addition of missing children
             *
             * @param {HTMLElement} el
             */
            ;

            _proto.observeChildren = function observeChildren(el) {
                var _this = this;

                if (!this.childListObserver) {
                    this.childListObserver = new MutationObserver(function() {
                        return _this.reLayout();
                    });
                }

                this.childListObserver.observe(el, {
                    childList: true
                });
            };

            _proto.observeChildAttributes = function observeChildAttributes(el, attributes) {
                var _this2 = this;

                if (attributes === void 0) {
                    attributes = [];
                }

                if (!this.childrenAttributesObservers) {
                    this.childrenAttributesObservers = [];
                }

                var attributesObserver = new MutationObserver(function() {
                    return _this2.reLayout();
                });
                attributesObserver.observe(el, {
                    attributeFilter: attributes
                });
                this.childrenAttributesObservers.push(attributesObserver);
            };

            _proto.observeChildResize = function observeChildResize(child) {
                if (!this.childrenResizeObservers) {
                    this.childrenResizeObservers = [];
                }

                services.resizeService.observeChild(child, this);
                this.childrenResizeObservers.push(child);
            };

            _proto.unobserveChildrenResize = function unobserveChildrenResize() {
                if (this.childrenResizeObservers) {
                    this.childrenResizeObservers.forEach(function(child) {
                        services.resizeService.unobserveChild(child);
                    });
                    this.childrenResizeObservers = null;
                }
            }
            /**
             * Remove DOM MutationObserver if one was created
             */
            ;

            _proto.unobserveChildren = function unobserveChildren() {
                if (this.childListObserver) {
                    this.childListObserver.disconnect();
                    this.childListObserver = null;
                }

                if (this.childrenAttributesObservers) {
                    for (var _iterator = this.childrenAttributesObservers, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
                        var _ref;

                        if (_isArray) {
                            if (_i >= _iterator.length) break;
                            _ref = _iterator[_i++];
                        } else {
                            _i = _iterator.next();
                            if (_i.done) break;
                            _ref = _i.value;
                        }

                        var observer = _ref;
                        observer.disconnect();
                        observer = null;
                    }

                    this.childrenAttributesObservers = null;
                }

                this.unobserveChildrenResize();
            };

            return WixElement;
        }(_wrapNativeSuper(HTMLElement));

    return WixElement;
}

export default wixElementWrapper;
//# sourceMappingURL=wixElement.js.map